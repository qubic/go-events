// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.23.4
// source: qevents.proto

package eventspb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *Event_Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	EventType uint32        `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventSize uint32        `protobuf:"varint,3,opt,name=event_size,json=eventSize,proto3" json:"event_size,omitempty"`
	EventData string        `protobuf:"bytes,4,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetHeader() *Event_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Event) GetEventType() uint32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *Event) GetEventSize() uint32 {
	if x != nil {
		return x.EventSize
	}
	return 0
}

func (x *Event) GetEventData() string {
	if x != nil {
		return x.EventData
	}
	return ""
}

type TransactionEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId   string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Events []*Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *TransactionEvents) Reset() {
	*x = TransactionEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionEvents) ProtoMessage() {}

func (x *TransactionEvents) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionEvents.ProtoReflect.Descriptor instead.
func (*TransactionEvents) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionEvents) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TransactionEvents) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type TickEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick     uint32               `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
	TxEvents []*TransactionEvents `protobuf:"bytes,2,rep,name=tx_events,json=txEvents,proto3" json:"tx_events,omitempty"`
}

func (x *TickEvents) Reset() {
	*x = TickEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickEvents) ProtoMessage() {}

func (x *TickEvents) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickEvents.ProtoReflect.Descriptor instead.
func (*TickEvents) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{2}
}

func (x *TickEvents) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *TickEvents) GetTxEvents() []*TransactionEvents {
	if x != nil {
		return x.TxEvents
	}
	return nil
}

type ProcessedTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TickNumber uint32 `protobuf:"varint,1,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	Epoch      uint32 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *ProcessedTick) Reset() {
	*x = ProcessedTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessedTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedTick) ProtoMessage() {}

func (x *ProcessedTick) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedTick.ProtoReflect.Descriptor instead.
func (*ProcessedTick) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessedTick) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

func (x *ProcessedTick) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type LastProcessedTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastProcessedTick uint32 `protobuf:"varint,1,opt,name=last_processed_tick,json=lastProcessedTick,proto3" json:"last_processed_tick,omitempty"`
}

func (x *LastProcessedTick) Reset() {
	*x = LastProcessedTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastProcessedTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastProcessedTick) ProtoMessage() {}

func (x *LastProcessedTick) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastProcessedTick.ProtoReflect.Descriptor instead.
func (*LastProcessedTick) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{4}
}

func (x *LastProcessedTick) GetLastProcessedTick() uint32 {
	if x != nil {
		return x.LastProcessedTick
	}
	return 0
}

type NextAvailableTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextTickNumber uint32 `protobuf:"varint,1,opt,name=next_tick_number,json=nextTickNumber,proto3" json:"next_tick_number,omitempty"`
}

func (x *NextAvailableTick) Reset() {
	*x = NextAvailableTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextAvailableTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextAvailableTick) ProtoMessage() {}

func (x *NextAvailableTick) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextAvailableTick.ProtoReflect.Descriptor instead.
func (*NextAvailableTick) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{5}
}

func (x *NextAvailableTick) GetNextTickNumber() uint32 {
	if x != nil {
		return x.NextTickNumber
	}
	return 0
}

type SkippedTicksInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTick uint32 `protobuf:"varint,1,opt,name=start_tick,json=startTick,proto3" json:"start_tick,omitempty"`
	EndTick   uint32 `protobuf:"varint,2,opt,name=end_tick,json=endTick,proto3" json:"end_tick,omitempty"`
}

func (x *SkippedTicksInterval) Reset() {
	*x = SkippedTicksInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkippedTicksInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkippedTicksInterval) ProtoMessage() {}

func (x *SkippedTicksInterval) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkippedTicksInterval.ProtoReflect.Descriptor instead.
func (*SkippedTicksInterval) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{6}
}

func (x *SkippedTicksInterval) GetStartTick() uint32 {
	if x != nil {
		return x.StartTick
	}
	return 0
}

func (x *SkippedTicksInterval) GetEndTick() uint32 {
	if x != nil {
		return x.EndTick
	}
	return 0
}

type SkippedTicksIntervalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkippedTicks []*SkippedTicksInterval `protobuf:"bytes,1,rep,name=skipped_ticks,json=skippedTicks,proto3" json:"skipped_ticks,omitempty"`
}

func (x *SkippedTicksIntervalList) Reset() {
	*x = SkippedTicksIntervalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkippedTicksIntervalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkippedTicksIntervalList) ProtoMessage() {}

func (x *SkippedTicksIntervalList) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkippedTicksIntervalList.ProtoReflect.Descriptor instead.
func (*SkippedTicksIntervalList) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{7}
}

func (x *SkippedTicksIntervalList) GetSkippedTicks() []*SkippedTicksInterval {
	if x != nil {
		return x.SkippedTicks
	}
	return nil
}

type ProcessedTickInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialProcessedTick uint32 `protobuf:"varint,1,opt,name=initial_processed_tick,json=initialProcessedTick,proto3" json:"initial_processed_tick,omitempty"`
	LastProcessedTick    uint32 `protobuf:"varint,2,opt,name=last_processed_tick,json=lastProcessedTick,proto3" json:"last_processed_tick,omitempty"`
}

func (x *ProcessedTickInterval) Reset() {
	*x = ProcessedTickInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessedTickInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedTickInterval) ProtoMessage() {}

func (x *ProcessedTickInterval) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedTickInterval.ProtoReflect.Descriptor instead.
func (*ProcessedTickInterval) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessedTickInterval) GetInitialProcessedTick() uint32 {
	if x != nil {
		return x.InitialProcessedTick
	}
	return 0
}

func (x *ProcessedTickInterval) GetLastProcessedTick() uint32 {
	if x != nil {
		return x.LastProcessedTick
	}
	return 0
}

type ProcessedTickIntervalsPerEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch     uint32                   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Intervals []*ProcessedTickInterval `protobuf:"bytes,2,rep,name=intervals,proto3" json:"intervals,omitempty"`
}

func (x *ProcessedTickIntervalsPerEpoch) Reset() {
	*x = ProcessedTickIntervalsPerEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessedTickIntervalsPerEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedTickIntervalsPerEpoch) ProtoMessage() {}

func (x *ProcessedTickIntervalsPerEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedTickIntervalsPerEpoch.ProtoReflect.Descriptor instead.
func (*ProcessedTickIntervalsPerEpoch) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessedTickIntervalsPerEpoch) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ProcessedTickIntervalsPerEpoch) GetIntervals() []*ProcessedTickInterval {
	if x != nil {
		return x.Intervals
	}
	return nil
}

type DecodedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*DecodedEvent_QuTransferEvent_
	//	*DecodedEvent_AssetIssuanceEvent_
	//	*DecodedEvent_AssetOwnershipChangeEvent_
	//	*DecodedEvent_AssetPossessionChangeEvent_
	//	*DecodedEvent_BurnEvent_
	//	*DecodedEvent_DustBurnEvent_
	//	*DecodedEvent_SpectrumStatsEvent_
	//	*DecodedEvent_ContractMessageEvent_
	Event isDecodedEvent_Event `protobuf_oneof:"event"`
}

func (x *DecodedEvent) Reset() {
	*x = DecodedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedEvent) ProtoMessage() {}

func (x *DecodedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedEvent.ProtoReflect.Descriptor instead.
func (*DecodedEvent) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10}
}

func (m *DecodedEvent) GetEvent() isDecodedEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *DecodedEvent) GetQuTransferEvent() *DecodedEvent_QuTransferEvent {
	if x, ok := x.GetEvent().(*DecodedEvent_QuTransferEvent_); ok {
		return x.QuTransferEvent
	}
	return nil
}

func (x *DecodedEvent) GetAssetIssuanceEvent() *DecodedEvent_AssetIssuanceEvent {
	if x, ok := x.GetEvent().(*DecodedEvent_AssetIssuanceEvent_); ok {
		return x.AssetIssuanceEvent
	}
	return nil
}

func (x *DecodedEvent) GetAssetOwnershipChangeEvent() *DecodedEvent_AssetOwnershipChangeEvent {
	if x, ok := x.GetEvent().(*DecodedEvent_AssetOwnershipChangeEvent_); ok {
		return x.AssetOwnershipChangeEvent
	}
	return nil
}

func (x *DecodedEvent) GetAssetPossessionChangeEvent() *DecodedEvent_AssetPossessionChangeEvent {
	if x, ok := x.GetEvent().(*DecodedEvent_AssetPossessionChangeEvent_); ok {
		return x.AssetPossessionChangeEvent
	}
	return nil
}

func (x *DecodedEvent) GetBurnEvent() *DecodedEvent_BurnEvent {
	if x, ok := x.GetEvent().(*DecodedEvent_BurnEvent_); ok {
		return x.BurnEvent
	}
	return nil
}

func (x *DecodedEvent) GetDustBurnEvent() *DecodedEvent_DustBurnEvent {
	if x, ok := x.GetEvent().(*DecodedEvent_DustBurnEvent_); ok {
		return x.DustBurnEvent
	}
	return nil
}

func (x *DecodedEvent) GetSpectrumStatsEvent() *DecodedEvent_SpectrumStatsEvent {
	if x, ok := x.GetEvent().(*DecodedEvent_SpectrumStatsEvent_); ok {
		return x.SpectrumStatsEvent
	}
	return nil
}

func (x *DecodedEvent) GetContractMessageEvent() *DecodedEvent_ContractMessageEvent {
	if x, ok := x.GetEvent().(*DecodedEvent_ContractMessageEvent_); ok {
		return x.ContractMessageEvent
	}
	return nil
}

type isDecodedEvent_Event interface {
	isDecodedEvent_Event()
}

type DecodedEvent_QuTransferEvent_ struct {
	QuTransferEvent *DecodedEvent_QuTransferEvent `protobuf:"bytes,1,opt,name=qu_transfer_event,json=quTransferEvent,proto3,oneof"`
}

type DecodedEvent_AssetIssuanceEvent_ struct {
	AssetIssuanceEvent *DecodedEvent_AssetIssuanceEvent `protobuf:"bytes,2,opt,name=asset_issuance_event,json=assetIssuanceEvent,proto3,oneof"`
}

type DecodedEvent_AssetOwnershipChangeEvent_ struct {
	AssetOwnershipChangeEvent *DecodedEvent_AssetOwnershipChangeEvent `protobuf:"bytes,3,opt,name=asset_ownership_change_event,json=assetOwnershipChangeEvent,proto3,oneof"`
}

type DecodedEvent_AssetPossessionChangeEvent_ struct {
	AssetPossessionChangeEvent *DecodedEvent_AssetPossessionChangeEvent `protobuf:"bytes,4,opt,name=asset_possession_change_event,json=assetPossessionChangeEvent,proto3,oneof"`
}

type DecodedEvent_BurnEvent_ struct {
	BurnEvent *DecodedEvent_BurnEvent `protobuf:"bytes,5,opt,name=burn_event,json=burnEvent,proto3,oneof"`
}

type DecodedEvent_DustBurnEvent_ struct {
	DustBurnEvent *DecodedEvent_DustBurnEvent `protobuf:"bytes,6,opt,name=dust_burn_event,json=dustBurnEvent,proto3,oneof"`
}

type DecodedEvent_SpectrumStatsEvent_ struct {
	SpectrumStatsEvent *DecodedEvent_SpectrumStatsEvent `protobuf:"bytes,7,opt,name=spectrum_stats_event,json=spectrumStatsEvent,proto3,oneof"`
}

type DecodedEvent_ContractMessageEvent_ struct {
	ContractMessageEvent *DecodedEvent_ContractMessageEvent `protobuf:"bytes,8,opt,name=contract_message_event,json=contractMessageEvent,proto3,oneof"`
}

func (*DecodedEvent_QuTransferEvent_) isDecodedEvent_Event() {}

func (*DecodedEvent_AssetIssuanceEvent_) isDecodedEvent_Event() {}

func (*DecodedEvent_AssetOwnershipChangeEvent_) isDecodedEvent_Event() {}

func (*DecodedEvent_AssetPossessionChangeEvent_) isDecodedEvent_Event() {}

func (*DecodedEvent_BurnEvent_) isDecodedEvent_Event() {}

func (*DecodedEvent_DustBurnEvent_) isDecodedEvent_Event() {}

func (*DecodedEvent_SpectrumStatsEvent_) isDecodedEvent_Event() {}

func (*DecodedEvent_ContractMessageEvent_) isDecodedEvent_Event() {}

type GetTickEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick uint32 `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *GetTickEventsRequest) Reset() {
	*x = GetTickEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickEventsRequest) ProtoMessage() {}

func (x *GetTickEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickEventsRequest.ProtoReflect.Descriptor instead.
func (*GetTickEventsRequest) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{11}
}

func (x *GetTickEventsRequest) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

type GetTickProcessTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick uint32 `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *GetTickProcessTimeRequest) Reset() {
	*x = GetTickProcessTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickProcessTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickProcessTimeRequest) ProtoMessage() {}

func (x *GetTickProcessTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickProcessTimeRequest.ProtoReflect.Descriptor instead.
func (*GetTickProcessTimeRequest) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{12}
}

func (x *GetTickProcessTimeRequest) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

type GetTickProcessTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessTimeSeconds uint64 `protobuf:"varint,1,opt,name=process_time_seconds,json=processTimeSeconds,proto3" json:"process_time_seconds,omitempty"`
}

func (x *GetTickProcessTimeResponse) Reset() {
	*x = GetTickProcessTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickProcessTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickProcessTimeResponse) ProtoMessage() {}

func (x *GetTickProcessTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickProcessTimeResponse.ProtoReflect.Descriptor instead.
func (*GetTickProcessTimeResponse) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{13}
}

func (x *GetTickProcessTimeResponse) GetProcessTimeSeconds() uint64 {
	if x != nil {
		return x.ProcessTimeSeconds
	}
	return 0
}

type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastProcessedTick              *ProcessedTick                    `protobuf:"bytes,1,opt,name=last_processed_tick,json=lastProcessedTick,proto3" json:"last_processed_tick,omitempty"`
	LastProcessedTicksPerEpoch     map[uint32]uint32                 `protobuf:"bytes,2,rep,name=last_processed_ticks_per_epoch,json=lastProcessedTicksPerEpoch,proto3" json:"last_processed_ticks_per_epoch,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SkippedTicks                   []*SkippedTicksInterval           `protobuf:"bytes,3,rep,name=skipped_ticks,json=skippedTicks,proto3" json:"skipped_ticks,omitempty"`
	ProcessedTickIntervalsPerEpoch []*ProcessedTickIntervalsPerEpoch `protobuf:"bytes,4,rep,name=processed_tick_intervals_per_epoch,json=processedTickIntervalsPerEpoch,proto3" json:"processed_tick_intervals_per_epoch,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{14}
}

func (x *GetStatusResponse) GetLastProcessedTick() *ProcessedTick {
	if x != nil {
		return x.LastProcessedTick
	}
	return nil
}

func (x *GetStatusResponse) GetLastProcessedTicksPerEpoch() map[uint32]uint32 {
	if x != nil {
		return x.LastProcessedTicksPerEpoch
	}
	return nil
}

func (x *GetStatusResponse) GetSkippedTicks() []*SkippedTicksInterval {
	if x != nil {
		return x.SkippedTicks
	}
	return nil
}

func (x *GetStatusResponse) GetProcessedTickIntervalsPerEpoch() []*ProcessedTickIntervalsPerEpoch {
	if x != nil {
		return x.ProcessedTickIntervalsPerEpoch
	}
	return nil
}

type DecodeEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType uint32 `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventData string `protobuf:"bytes,2,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
}

func (x *DecodeEventRequest) Reset() {
	*x = DecodeEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeEventRequest) ProtoMessage() {}

func (x *DecodeEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeEventRequest.ProtoReflect.Descriptor instead.
func (*DecodeEventRequest) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{15}
}

func (x *DecodeEventRequest) GetEventType() uint32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *DecodeEventRequest) GetEventData() string {
	if x != nil {
		return x.EventData
	}
	return ""
}

type DecodeEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecodedEvent *DecodedEvent `protobuf:"bytes,1,opt,name=decoded_event,json=decodedEvent,proto3" json:"decoded_event,omitempty"`
}

func (x *DecodeEventResponse) Reset() {
	*x = DecodeEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodeEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeEventResponse) ProtoMessage() {}

func (x *DecodeEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeEventResponse.ProtoReflect.Descriptor instead.
func (*DecodeEventResponse) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{16}
}

func (x *DecodeEventResponse) GetDecodedEvent() *DecodedEvent {
	if x != nil {
		return x.DecodedEvent
	}
	return nil
}

type Event_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch       uint32 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Tick        uint32 `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	Tmp         uint32 `protobuf:"varint,3,opt,name=tmp,proto3" json:"tmp,omitempty"`
	EventId     uint64 `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventDigest uint64 `protobuf:"varint,5,opt,name=event_digest,json=eventDigest,proto3" json:"event_digest,omitempty"`
}

func (x *Event_Header) Reset() {
	*x = Event_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Header) ProtoMessage() {}

func (x *Event_Header) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Header.ProtoReflect.Descriptor instead.
func (*Event_Header) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Event_Header) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Event_Header) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *Event_Header) GetTmp() uint32 {
	if x != nil {
		return x.Tmp
	}
	return 0
}

func (x *Event_Header) GetEventId() uint64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *Event_Header) GetEventDigest() uint64 {
	if x != nil {
		return x.EventDigest
	}
	return 0
}

type DecodedEvent_QuTransferEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId string `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestId   string `protobuf:"bytes,2,opt,name=dest_id,json=destId,proto3" json:"dest_id,omitempty"`
	Amount   uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DecodedEvent_QuTransferEvent) Reset() {
	*x = DecodedEvent_QuTransferEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedEvent_QuTransferEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedEvent_QuTransferEvent) ProtoMessage() {}

func (x *DecodedEvent_QuTransferEvent) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedEvent_QuTransferEvent.ProtoReflect.Descriptor instead.
func (*DecodedEvent_QuTransferEvent) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10, 0}
}

func (x *DecodedEvent_QuTransferEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *DecodedEvent_QuTransferEvent) GetDestId() string {
	if x != nil {
		return x.DestId
	}
	return ""
}

func (x *DecodedEvent_QuTransferEvent) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DecodedEvent_AssetIssuanceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId         string `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	AssetName        string `protobuf:"bytes,2,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	NumberOfDecimals uint32 `protobuf:"varint,3,opt,name=number_of_decimals,json=numberOfDecimals,proto3" json:"number_of_decimals,omitempty"`
	MeasurementUnit  []byte `protobuf:"bytes,4,opt,name=measurement_unit,json=measurementUnit,proto3" json:"measurement_unit,omitempty"`
	NumberOfShares   int64  `protobuf:"varint,5,opt,name=number_of_shares,json=numberOfShares,proto3" json:"number_of_shares,omitempty"`
}

func (x *DecodedEvent_AssetIssuanceEvent) Reset() {
	*x = DecodedEvent_AssetIssuanceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedEvent_AssetIssuanceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedEvent_AssetIssuanceEvent) ProtoMessage() {}

func (x *DecodedEvent_AssetIssuanceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedEvent_AssetIssuanceEvent.ProtoReflect.Descriptor instead.
func (*DecodedEvent_AssetIssuanceEvent) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10, 1}
}

func (x *DecodedEvent_AssetIssuanceEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *DecodedEvent_AssetIssuanceEvent) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *DecodedEvent_AssetIssuanceEvent) GetNumberOfDecimals() uint32 {
	if x != nil {
		return x.NumberOfDecimals
	}
	return 0
}

func (x *DecodedEvent_AssetIssuanceEvent) GetMeasurementUnit() []byte {
	if x != nil {
		return x.MeasurementUnit
	}
	return nil
}

func (x *DecodedEvent_AssetIssuanceEvent) GetNumberOfShares() int64 {
	if x != nil {
		return x.NumberOfShares
	}
	return 0
}

type DecodedEvent_AssetOwnershipChangeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId         string `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestId           string `protobuf:"bytes,2,opt,name=dest_id,json=destId,proto3" json:"dest_id,omitempty"`
	IssuerId         string `protobuf:"bytes,3,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	AssetName        string `protobuf:"bytes,4,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	NumberOfDecimals uint32 `protobuf:"varint,5,opt,name=number_of_decimals,json=numberOfDecimals,proto3" json:"number_of_decimals,omitempty"`
	MeasurementUnit  []byte `protobuf:"bytes,6,opt,name=measurement_unit,json=measurementUnit,proto3" json:"measurement_unit,omitempty"`
	NumberOfShares   int64  `protobuf:"varint,7,opt,name=number_of_shares,json=numberOfShares,proto3" json:"number_of_shares,omitempty"`
}

func (x *DecodedEvent_AssetOwnershipChangeEvent) Reset() {
	*x = DecodedEvent_AssetOwnershipChangeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedEvent_AssetOwnershipChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedEvent_AssetOwnershipChangeEvent) ProtoMessage() {}

func (x *DecodedEvent_AssetOwnershipChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedEvent_AssetOwnershipChangeEvent.ProtoReflect.Descriptor instead.
func (*DecodedEvent_AssetOwnershipChangeEvent) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10, 2}
}

func (x *DecodedEvent_AssetOwnershipChangeEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *DecodedEvent_AssetOwnershipChangeEvent) GetDestId() string {
	if x != nil {
		return x.DestId
	}
	return ""
}

func (x *DecodedEvent_AssetOwnershipChangeEvent) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *DecodedEvent_AssetOwnershipChangeEvent) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *DecodedEvent_AssetOwnershipChangeEvent) GetNumberOfDecimals() uint32 {
	if x != nil {
		return x.NumberOfDecimals
	}
	return 0
}

func (x *DecodedEvent_AssetOwnershipChangeEvent) GetMeasurementUnit() []byte {
	if x != nil {
		return x.MeasurementUnit
	}
	return nil
}

func (x *DecodedEvent_AssetOwnershipChangeEvent) GetNumberOfShares() int64 {
	if x != nil {
		return x.NumberOfShares
	}
	return 0
}

type DecodedEvent_AssetPossessionChangeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId         string `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	DestId           string `protobuf:"bytes,2,opt,name=dest_id,json=destId,proto3" json:"dest_id,omitempty"`
	IssuerId         string `protobuf:"bytes,3,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	AssetName        string `protobuf:"bytes,4,opt,name=asset_name,json=assetName,proto3" json:"asset_name,omitempty"`
	NumberOfDecimals uint32 `protobuf:"varint,5,opt,name=number_of_decimals,json=numberOfDecimals,proto3" json:"number_of_decimals,omitempty"`
	MeasurementUnit  []byte `protobuf:"bytes,6,opt,name=measurement_unit,json=measurementUnit,proto3" json:"measurement_unit,omitempty"`
	NumberOfShares   int64  `protobuf:"varint,7,opt,name=number_of_shares,json=numberOfShares,proto3" json:"number_of_shares,omitempty"`
}

func (x *DecodedEvent_AssetPossessionChangeEvent) Reset() {
	*x = DecodedEvent_AssetPossessionChangeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedEvent_AssetPossessionChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedEvent_AssetPossessionChangeEvent) ProtoMessage() {}

func (x *DecodedEvent_AssetPossessionChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedEvent_AssetPossessionChangeEvent.ProtoReflect.Descriptor instead.
func (*DecodedEvent_AssetPossessionChangeEvent) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10, 3}
}

func (x *DecodedEvent_AssetPossessionChangeEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *DecodedEvent_AssetPossessionChangeEvent) GetDestId() string {
	if x != nil {
		return x.DestId
	}
	return ""
}

func (x *DecodedEvent_AssetPossessionChangeEvent) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *DecodedEvent_AssetPossessionChangeEvent) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *DecodedEvent_AssetPossessionChangeEvent) GetNumberOfDecimals() uint32 {
	if x != nil {
		return x.NumberOfDecimals
	}
	return 0
}

func (x *DecodedEvent_AssetPossessionChangeEvent) GetMeasurementUnit() []byte {
	if x != nil {
		return x.MeasurementUnit
	}
	return nil
}

func (x *DecodedEvent_AssetPossessionChangeEvent) GetNumberOfShares() int64 {
	if x != nil {
		return x.NumberOfShares
	}
	return 0
}

type DecodedEvent_BurnEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId string `protobuf:"bytes,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Amount   uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DecodedEvent_BurnEvent) Reset() {
	*x = DecodedEvent_BurnEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedEvent_BurnEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedEvent_BurnEvent) ProtoMessage() {}

func (x *DecodedEvent_BurnEvent) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedEvent_BurnEvent.ProtoReflect.Descriptor instead.
func (*DecodedEvent_BurnEvent) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10, 4}
}

func (x *DecodedEvent_BurnEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *DecodedEvent_BurnEvent) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DecodedEvent_DustBurnEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfBurns uint32 `protobuf:"varint,1,opt,name=number_of_burns,json=numberOfBurns,proto3" json:"number_of_burns,omitempty"`
	SourceId      string `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Amount        uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DecodedEvent_DustBurnEvent) Reset() {
	*x = DecodedEvent_DustBurnEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedEvent_DustBurnEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedEvent_DustBurnEvent) ProtoMessage() {}

func (x *DecodedEvent_DustBurnEvent) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedEvent_DustBurnEvent.ProtoReflect.Descriptor instead.
func (*DecodedEvent_DustBurnEvent) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10, 5}
}

func (x *DecodedEvent_DustBurnEvent) GetNumberOfBurns() uint32 {
	if x != nil {
		return x.NumberOfBurns
	}
	return 0
}

func (x *DecodedEvent_DustBurnEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *DecodedEvent_DustBurnEvent) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DecodedEvent_SpectrumStatsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAmount               uint64   `protobuf:"varint,1,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	DustThresholdBurnAll      uint64   `protobuf:"varint,2,opt,name=dust_threshold_burn_all,json=dustThresholdBurnAll,proto3" json:"dust_threshold_burn_all,omitempty"`
	DustThresholdBurnHalf     uint64   `protobuf:"varint,3,opt,name=dust_threshold_burn_half,json=dustThresholdBurnHalf,proto3" json:"dust_threshold_burn_half,omitempty"`
	NumberOfEntities          uint32   `protobuf:"varint,4,opt,name=number_of_entities,json=numberOfEntities,proto3" json:"number_of_entities,omitempty"`
	EntityCategoryPopulations []uint32 `protobuf:"varint,5,rep,packed,name=entity_category_populations,json=entityCategoryPopulations,proto3" json:"entity_category_populations,omitempty"`
}

func (x *DecodedEvent_SpectrumStatsEvent) Reset() {
	*x = DecodedEvent_SpectrumStatsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedEvent_SpectrumStatsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedEvent_SpectrumStatsEvent) ProtoMessage() {}

func (x *DecodedEvent_SpectrumStatsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedEvent_SpectrumStatsEvent.ProtoReflect.Descriptor instead.
func (*DecodedEvent_SpectrumStatsEvent) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10, 6}
}

func (x *DecodedEvent_SpectrumStatsEvent) GetTotalAmount() uint64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *DecodedEvent_SpectrumStatsEvent) GetDustThresholdBurnAll() uint64 {
	if x != nil {
		return x.DustThresholdBurnAll
	}
	return 0
}

func (x *DecodedEvent_SpectrumStatsEvent) GetDustThresholdBurnHalf() uint64 {
	if x != nil {
		return x.DustThresholdBurnHalf
	}
	return 0
}

func (x *DecodedEvent_SpectrumStatsEvent) GetNumberOfEntities() uint32 {
	if x != nil {
		return x.NumberOfEntities
	}
	return 0
}

func (x *DecodedEvent_SpectrumStatsEvent) GetEntityCategoryPopulations() []uint32 {
	if x != nil {
		return x.EntityCategoryPopulations
	}
	return nil
}

type DecodedEvent_ContractMessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId uint32 `protobuf:"varint,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Message    []byte `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DecodedEvent_ContractMessageEvent) Reset() {
	*x = DecodedEvent_ContractMessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecodedEvent_ContractMessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodedEvent_ContractMessageEvent) ProtoMessage() {}

func (x *DecodedEvent_ContractMessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodedEvent_ContractMessageEvent.ProtoReflect.Descriptor instead.
func (*DecodedEvent_ContractMessageEvent) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10, 7}
}

func (x *DecodedEvent_ContractMessageEvent) GetContractId() uint32 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

func (x *DecodedEvent_ContractMessageEvent) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_qevents_proto protoreflect.FileDescriptor

var file_qevents_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x71, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x82, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x13, 0x0a,
	0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x5e, 0x0a, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63,
	0x6b, 0x12, 0x3c, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x74, 0x78, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x46, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x43, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x13,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x22, 0x3d, 0x0a, 0x11,
	0x4e, 0x65, 0x78, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x65, 0x78,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x14, 0x53,
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x22, 0x63, 0x0a,
	0x18, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x6b, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x73, 0x22, 0x7d, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54,
	0x69, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x22, 0x79, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x41, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71,
	0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x22, 0xa9, 0x11, 0x0a,
	0x0c, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a,
	0x11, 0x71, 0x75, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x71, 0x75, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x14, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x77, 0x0a, 0x1c, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x19, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x7a, 0x0a, 0x1d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x6f, 0x73,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x71, 0x75, 0x62,
	0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x1a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x45, 0x0a, 0x0a, 0x62, 0x75, 0x72, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x42, 0x75, 0x72, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x62, 0x75, 0x72,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x0f, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x62,
	0x75, 0x72, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x75, 0x73, 0x74,
	0x42, 0x75, 0x72, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x75, 0x73,
	0x74, 0x42, 0x75, 0x72, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x14, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x72, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x67, 0x0a,
	0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x5f, 0x0a, 0x0f, 0x51, 0x75, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xd3, 0x01, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x1a, 0x90, 0x02,
	0x0a, 0x19, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x1a, 0x91, 0x02, 0x0a, 0x1a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x09, 0x42, 0x75, 0x72, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x6c, 0x0a, 0x0d, 0x44, 0x75, 0x73, 0x74, 0x42, 0x75,
	0x72, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x42, 0x75, 0x72, 0x6e, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x95, 0x02, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x74, 0x72, 0x75,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35,
	0x0a, 0x17, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x5f, 0x62, 0x75, 0x72, 0x6e, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x14, 0x64, 0x75, 0x73, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x75,
	0x72, 0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x5f, 0x68, 0x61, 0x6c,
	0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x64, 0x75, 0x73, 0x74, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x75, 0x72, 0x6e, 0x48, 0x61, 0x6c, 0x66, 0x12, 0x2c,
	0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x1b,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x19, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x51, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x69, 0x63, 0x6b, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x69, 0x63, 0x6b, 0x22, 0x4e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xf8, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x83, 0x01, 0x0a, 0x1e, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x54, 0x69, 0x63, 0x6b, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x1a, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x47,
	0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x78, 0x0a, 0x22, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x52, 0x1e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x1a, 0x4d, 0x0a, 0x1f, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x52, 0x0a, 0x12, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x13, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x64,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0c,
	0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x32, 0xef, 0x03, 0x0a,
	0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x22, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x5f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x2e, 0x71, 0x75, 0x62,
	0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63,
	0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x75, 0x0a, 0x0b, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x25,
	0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x75, 0x62,
	0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qevents_proto_rawDescOnce sync.Once
	file_qevents_proto_rawDescData = file_qevents_proto_rawDesc
)

func file_qevents_proto_rawDescGZIP() []byte {
	file_qevents_proto_rawDescOnce.Do(func() {
		file_qevents_proto_rawDescData = protoimpl.X.CompressGZIP(file_qevents_proto_rawDescData)
	})
	return file_qevents_proto_rawDescData
}

var file_qevents_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_qevents_proto_goTypes = []interface{}{
	(*Event)(nil),                                   // 0: qubic.events.Event
	(*TransactionEvents)(nil),                       // 1: qubic.events.TransactionEvents
	(*TickEvents)(nil),                              // 2: qubic.events.TickEvents
	(*ProcessedTick)(nil),                           // 3: qubic.events.ProcessedTick
	(*LastProcessedTick)(nil),                       // 4: qubic.events.LastProcessedTick
	(*NextAvailableTick)(nil),                       // 5: qubic.events.NextAvailableTick
	(*SkippedTicksInterval)(nil),                    // 6: qubic.events.SkippedTicksInterval
	(*SkippedTicksIntervalList)(nil),                // 7: qubic.events.SkippedTicksIntervalList
	(*ProcessedTickInterval)(nil),                   // 8: qubic.events.ProcessedTickInterval
	(*ProcessedTickIntervalsPerEpoch)(nil),          // 9: qubic.events.ProcessedTickIntervalsPerEpoch
	(*DecodedEvent)(nil),                            // 10: qubic.events.DecodedEvent
	(*GetTickEventsRequest)(nil),                    // 11: qubic.events.GetTickEventsRequest
	(*GetTickProcessTimeRequest)(nil),               // 12: qubic.events.GetTickProcessTimeRequest
	(*GetTickProcessTimeResponse)(nil),              // 13: qubic.events.GetTickProcessTimeResponse
	(*GetStatusResponse)(nil),                       // 14: qubic.events.GetStatusResponse
	(*DecodeEventRequest)(nil),                      // 15: qubic.events.DecodeEventRequest
	(*DecodeEventResponse)(nil),                     // 16: qubic.events.DecodeEventResponse
	(*Event_Header)(nil),                            // 17: qubic.events.Event.Header
	(*DecodedEvent_QuTransferEvent)(nil),            // 18: qubic.events.DecodedEvent.QuTransferEvent
	(*DecodedEvent_AssetIssuanceEvent)(nil),         // 19: qubic.events.DecodedEvent.AssetIssuanceEvent
	(*DecodedEvent_AssetOwnershipChangeEvent)(nil),  // 20: qubic.events.DecodedEvent.AssetOwnershipChangeEvent
	(*DecodedEvent_AssetPossessionChangeEvent)(nil), // 21: qubic.events.DecodedEvent.AssetPossessionChangeEvent
	(*DecodedEvent_BurnEvent)(nil),                  // 22: qubic.events.DecodedEvent.BurnEvent
	(*DecodedEvent_DustBurnEvent)(nil),              // 23: qubic.events.DecodedEvent.DustBurnEvent
	(*DecodedEvent_SpectrumStatsEvent)(nil),         // 24: qubic.events.DecodedEvent.SpectrumStatsEvent
	(*DecodedEvent_ContractMessageEvent)(nil),       // 25: qubic.events.DecodedEvent.ContractMessageEvent
	nil,                   // 26: qubic.events.GetStatusResponse.LastProcessedTicksPerEpochEntry
	(*emptypb.Empty)(nil), // 27: google.protobuf.Empty
}
var file_qevents_proto_depIdxs = []int32{
	17, // 0: qubic.events.Event.header:type_name -> qubic.events.Event.Header
	0,  // 1: qubic.events.TransactionEvents.events:type_name -> qubic.events.Event
	1,  // 2: qubic.events.TickEvents.tx_events:type_name -> qubic.events.TransactionEvents
	6,  // 3: qubic.events.SkippedTicksIntervalList.skipped_ticks:type_name -> qubic.events.SkippedTicksInterval
	8,  // 4: qubic.events.ProcessedTickIntervalsPerEpoch.intervals:type_name -> qubic.events.ProcessedTickInterval
	18, // 5: qubic.events.DecodedEvent.qu_transfer_event:type_name -> qubic.events.DecodedEvent.QuTransferEvent
	19, // 6: qubic.events.DecodedEvent.asset_issuance_event:type_name -> qubic.events.DecodedEvent.AssetIssuanceEvent
	20, // 7: qubic.events.DecodedEvent.asset_ownership_change_event:type_name -> qubic.events.DecodedEvent.AssetOwnershipChangeEvent
	21, // 8: qubic.events.DecodedEvent.asset_possession_change_event:type_name -> qubic.events.DecodedEvent.AssetPossessionChangeEvent
	22, // 9: qubic.events.DecodedEvent.burn_event:type_name -> qubic.events.DecodedEvent.BurnEvent
	23, // 10: qubic.events.DecodedEvent.dust_burn_event:type_name -> qubic.events.DecodedEvent.DustBurnEvent
	24, // 11: qubic.events.DecodedEvent.spectrum_stats_event:type_name -> qubic.events.DecodedEvent.SpectrumStatsEvent
	25, // 12: qubic.events.DecodedEvent.contract_message_event:type_name -> qubic.events.DecodedEvent.ContractMessageEvent
	3,  // 13: qubic.events.GetStatusResponse.last_processed_tick:type_name -> qubic.events.ProcessedTick
	26, // 14: qubic.events.GetStatusResponse.last_processed_ticks_per_epoch:type_name -> qubic.events.GetStatusResponse.LastProcessedTicksPerEpochEntry
	6,  // 15: qubic.events.GetStatusResponse.skipped_ticks:type_name -> qubic.events.SkippedTicksInterval
	9,  // 16: qubic.events.GetStatusResponse.processed_tick_intervals_per_epoch:type_name -> qubic.events.ProcessedTickIntervalsPerEpoch
	10, // 17: qubic.events.DecodeEventResponse.decoded_event:type_name -> qubic.events.DecodedEvent
	11, // 18: qubic.events.EventsService.GetTickEvents:input_type -> qubic.events.GetTickEventsRequest
	27, // 19: qubic.events.EventsService.GetStatus:input_type -> google.protobuf.Empty
	12, // 20: qubic.events.EventsService.GetTickProcessTime:input_type -> qubic.events.GetTickProcessTimeRequest
	15, // 21: qubic.events.EventsService.DecodeEvent:input_type -> qubic.events.DecodeEventRequest
	2,  // 22: qubic.events.EventsService.GetTickEvents:output_type -> qubic.events.TickEvents
	14, // 23: qubic.events.EventsService.GetStatus:output_type -> qubic.events.GetStatusResponse
	13, // 24: qubic.events.EventsService.GetTickProcessTime:output_type -> qubic.events.GetTickProcessTimeResponse
	16, // 25: qubic.events.EventsService.DecodeEvent:output_type -> qubic.events.DecodeEventResponse
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_qevents_proto_init() }
func file_qevents_proto_init() {
	if File_qevents_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qevents_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessedTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastProcessedTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextAvailableTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkippedTicksInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkippedTicksIntervalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessedTickInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessedTickIntervalsPerEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTickEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTickProcessTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTickProcessTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodeEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedEvent_QuTransferEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedEvent_AssetIssuanceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedEvent_AssetOwnershipChangeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedEvent_AssetPossessionChangeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedEvent_BurnEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedEvent_DustBurnEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedEvent_SpectrumStatsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecodedEvent_ContractMessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_qevents_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*DecodedEvent_QuTransferEvent_)(nil),
		(*DecodedEvent_AssetIssuanceEvent_)(nil),
		(*DecodedEvent_AssetOwnershipChangeEvent_)(nil),
		(*DecodedEvent_AssetPossessionChangeEvent_)(nil),
		(*DecodedEvent_BurnEvent_)(nil),
		(*DecodedEvent_DustBurnEvent_)(nil),
		(*DecodedEvent_SpectrumStatsEvent_)(nil),
		(*DecodedEvent_ContractMessageEvent_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qevents_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qevents_proto_goTypes,
		DependencyIndexes: file_qevents_proto_depIdxs,
		MessageInfos:      file_qevents_proto_msgTypes,
	}.Build()
	File_qevents_proto = out.File
	file_qevents_proto_rawDesc = nil
	file_qevents_proto_goTypes = nil
	file_qevents_proto_depIdxs = nil
}
