// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.23.4
// source: qevents.proto

package eventspb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *Event_Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	EventType uint32        `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventSize uint32        `protobuf:"varint,3,opt,name=event_size,json=eventSize,proto3" json:"event_size,omitempty"`
	EventData string        `protobuf:"bytes,4,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetHeader() *Event_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Event) GetEventType() uint32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *Event) GetEventSize() uint32 {
	if x != nil {
		return x.EventSize
	}
	return 0
}

func (x *Event) GetEventData() string {
	if x != nil {
		return x.EventData
	}
	return ""
}

type TransactionEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId   string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Events []*Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *TransactionEvents) Reset() {
	*x = TransactionEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionEvents) ProtoMessage() {}

func (x *TransactionEvents) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionEvents.ProtoReflect.Descriptor instead.
func (*TransactionEvents) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{1}
}

func (x *TransactionEvents) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TransactionEvents) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type TickEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick     uint32               `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
	TxEvents []*TransactionEvents `protobuf:"bytes,2,rep,name=tx_events,json=txEvents,proto3" json:"tx_events,omitempty"`
}

func (x *TickEvents) Reset() {
	*x = TickEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickEvents) ProtoMessage() {}

func (x *TickEvents) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickEvents.ProtoReflect.Descriptor instead.
func (*TickEvents) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{2}
}

func (x *TickEvents) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *TickEvents) GetTxEvents() []*TransactionEvents {
	if x != nil {
		return x.TxEvents
	}
	return nil
}

type ProcessedTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TickNumber uint32 `protobuf:"varint,1,opt,name=tick_number,json=tickNumber,proto3" json:"tick_number,omitempty"`
	Epoch      uint32 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *ProcessedTick) Reset() {
	*x = ProcessedTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessedTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedTick) ProtoMessage() {}

func (x *ProcessedTick) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedTick.ProtoReflect.Descriptor instead.
func (*ProcessedTick) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessedTick) GetTickNumber() uint32 {
	if x != nil {
		return x.TickNumber
	}
	return 0
}

func (x *ProcessedTick) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type LastProcessedTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastProcessedTick uint32 `protobuf:"varint,1,opt,name=last_processed_tick,json=lastProcessedTick,proto3" json:"last_processed_tick,omitempty"`
}

func (x *LastProcessedTick) Reset() {
	*x = LastProcessedTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastProcessedTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastProcessedTick) ProtoMessage() {}

func (x *LastProcessedTick) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastProcessedTick.ProtoReflect.Descriptor instead.
func (*LastProcessedTick) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{4}
}

func (x *LastProcessedTick) GetLastProcessedTick() uint32 {
	if x != nil {
		return x.LastProcessedTick
	}
	return 0
}

type NextAvailableTick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextTickNumber uint32 `protobuf:"varint,1,opt,name=next_tick_number,json=nextTickNumber,proto3" json:"next_tick_number,omitempty"`
}

func (x *NextAvailableTick) Reset() {
	*x = NextAvailableTick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextAvailableTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextAvailableTick) ProtoMessage() {}

func (x *NextAvailableTick) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextAvailableTick.ProtoReflect.Descriptor instead.
func (*NextAvailableTick) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{5}
}

func (x *NextAvailableTick) GetNextTickNumber() uint32 {
	if x != nil {
		return x.NextTickNumber
	}
	return 0
}

type SkippedTicksInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTick uint32 `protobuf:"varint,1,opt,name=start_tick,json=startTick,proto3" json:"start_tick,omitempty"`
	EndTick   uint32 `protobuf:"varint,2,opt,name=end_tick,json=endTick,proto3" json:"end_tick,omitempty"`
}

func (x *SkippedTicksInterval) Reset() {
	*x = SkippedTicksInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkippedTicksInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkippedTicksInterval) ProtoMessage() {}

func (x *SkippedTicksInterval) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkippedTicksInterval.ProtoReflect.Descriptor instead.
func (*SkippedTicksInterval) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{6}
}

func (x *SkippedTicksInterval) GetStartTick() uint32 {
	if x != nil {
		return x.StartTick
	}
	return 0
}

func (x *SkippedTicksInterval) GetEndTick() uint32 {
	if x != nil {
		return x.EndTick
	}
	return 0
}

type SkippedTicksIntervalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkippedTicks []*SkippedTicksInterval `protobuf:"bytes,1,rep,name=skipped_ticks,json=skippedTicks,proto3" json:"skipped_ticks,omitempty"`
}

func (x *SkippedTicksIntervalList) Reset() {
	*x = SkippedTicksIntervalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkippedTicksIntervalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkippedTicksIntervalList) ProtoMessage() {}

func (x *SkippedTicksIntervalList) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkippedTicksIntervalList.ProtoReflect.Descriptor instead.
func (*SkippedTicksIntervalList) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{7}
}

func (x *SkippedTicksIntervalList) GetSkippedTicks() []*SkippedTicksInterval {
	if x != nil {
		return x.SkippedTicks
	}
	return nil
}

type ProcessedTickInterval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialProcessedTick uint32 `protobuf:"varint,1,opt,name=initial_processed_tick,json=initialProcessedTick,proto3" json:"initial_processed_tick,omitempty"`
	LastProcessedTick    uint32 `protobuf:"varint,2,opt,name=last_processed_tick,json=lastProcessedTick,proto3" json:"last_processed_tick,omitempty"`
}

func (x *ProcessedTickInterval) Reset() {
	*x = ProcessedTickInterval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessedTickInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedTickInterval) ProtoMessage() {}

func (x *ProcessedTickInterval) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedTickInterval.ProtoReflect.Descriptor instead.
func (*ProcessedTickInterval) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessedTickInterval) GetInitialProcessedTick() uint32 {
	if x != nil {
		return x.InitialProcessedTick
	}
	return 0
}

func (x *ProcessedTickInterval) GetLastProcessedTick() uint32 {
	if x != nil {
		return x.LastProcessedTick
	}
	return 0
}

type ProcessedTickIntervalsPerEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch     uint32                   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Intervals []*ProcessedTickInterval `protobuf:"bytes,2,rep,name=intervals,proto3" json:"intervals,omitempty"`
}

func (x *ProcessedTickIntervalsPerEpoch) Reset() {
	*x = ProcessedTickIntervalsPerEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessedTickIntervalsPerEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessedTickIntervalsPerEpoch) ProtoMessage() {}

func (x *ProcessedTickIntervalsPerEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessedTickIntervalsPerEpoch.ProtoReflect.Descriptor instead.
func (*ProcessedTickIntervalsPerEpoch) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessedTickIntervalsPerEpoch) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ProcessedTickIntervalsPerEpoch) GetIntervals() []*ProcessedTickInterval {
	if x != nil {
		return x.Intervals
	}
	return nil
}

type GetTickEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick uint32 `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *GetTickEventsRequest) Reset() {
	*x = GetTickEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickEventsRequest) ProtoMessage() {}

func (x *GetTickEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickEventsRequest.ProtoReflect.Descriptor instead.
func (*GetTickEventsRequest) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{10}
}

func (x *GetTickEventsRequest) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

type GetTickProcessTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tick uint32 `protobuf:"varint,1,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *GetTickProcessTimeRequest) Reset() {
	*x = GetTickProcessTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickProcessTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickProcessTimeRequest) ProtoMessage() {}

func (x *GetTickProcessTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickProcessTimeRequest.ProtoReflect.Descriptor instead.
func (*GetTickProcessTimeRequest) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{11}
}

func (x *GetTickProcessTimeRequest) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

type GetTickProcessTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessTimeSeconds uint64 `protobuf:"varint,1,opt,name=process_time_seconds,json=processTimeSeconds,proto3" json:"process_time_seconds,omitempty"`
}

func (x *GetTickProcessTimeResponse) Reset() {
	*x = GetTickProcessTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTickProcessTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickProcessTimeResponse) ProtoMessage() {}

func (x *GetTickProcessTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickProcessTimeResponse.ProtoReflect.Descriptor instead.
func (*GetTickProcessTimeResponse) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{12}
}

func (x *GetTickProcessTimeResponse) GetProcessTimeSeconds() uint64 {
	if x != nil {
		return x.ProcessTimeSeconds
	}
	return 0
}

type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastProcessedTick              *ProcessedTick                    `protobuf:"bytes,1,opt,name=last_processed_tick,json=lastProcessedTick,proto3" json:"last_processed_tick,omitempty"`
	LastProcessedTicksPerEpoch     map[uint32]uint32                 `protobuf:"bytes,2,rep,name=last_processed_ticks_per_epoch,json=lastProcessedTicksPerEpoch,proto3" json:"last_processed_ticks_per_epoch,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SkippedTicks                   []*SkippedTicksInterval           `protobuf:"bytes,3,rep,name=skipped_ticks,json=skippedTicks,proto3" json:"skipped_ticks,omitempty"`
	ProcessedTickIntervalsPerEpoch []*ProcessedTickIntervalsPerEpoch `protobuf:"bytes,4,rep,name=processed_tick_intervals_per_epoch,json=processedTickIntervalsPerEpoch,proto3" json:"processed_tick_intervals_per_epoch,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{13}
}

func (x *GetStatusResponse) GetLastProcessedTick() *ProcessedTick {
	if x != nil {
		return x.LastProcessedTick
	}
	return nil
}

func (x *GetStatusResponse) GetLastProcessedTicksPerEpoch() map[uint32]uint32 {
	if x != nil {
		return x.LastProcessedTicksPerEpoch
	}
	return nil
}

func (x *GetStatusResponse) GetSkippedTicks() []*SkippedTicksInterval {
	if x != nil {
		return x.SkippedTicks
	}
	return nil
}

func (x *GetStatusResponse) GetProcessedTickIntervalsPerEpoch() []*ProcessedTickIntervalsPerEpoch {
	if x != nil {
		return x.ProcessedTickIntervalsPerEpoch
	}
	return nil
}

type Event_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch       uint32 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Tick        uint32 `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	Tmp         uint32 `protobuf:"varint,3,opt,name=tmp,proto3" json:"tmp,omitempty"`
	EventId     uint64 `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventDigest uint64 `protobuf:"varint,5,opt,name=event_digest,json=eventDigest,proto3" json:"event_digest,omitempty"`
}

func (x *Event_Header) Reset() {
	*x = Event_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qevents_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event_Header) ProtoMessage() {}

func (x *Event_Header) ProtoReflect() protoreflect.Message {
	mi := &file_qevents_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event_Header.ProtoReflect.Descriptor instead.
func (*Event_Header) Descriptor() ([]byte, []int) {
	return file_qevents_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Event_Header) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Event_Header) GetTick() uint32 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *Event_Header) GetTmp() uint32 {
	if x != nil {
		return x.Tmp
	}
	return 0
}

func (x *Event_Header) GetEventId() uint64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *Event_Header) GetEventDigest() uint64 {
	if x != nil {
		return x.EventDigest
	}
	return 0
}

var File_qevents_proto protoreflect.FileDescriptor

var file_qevents_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x71, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x82, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x13, 0x0a,
	0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x5e, 0x0a, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63,
	0x6b, 0x12, 0x3c, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x74, 0x78, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x46, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22, 0x43, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x13,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x22, 0x3d, 0x0a, 0x11,
	0x4e, 0x65, 0x78, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x65, 0x78,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x14, 0x53,
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x22, 0x63, 0x0a,
	0x18, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x6b, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x73, 0x22, 0x7d, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54,
	0x69, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x22, 0x79, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x41, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71,
	0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x2a, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x22, 0x4e, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xf8, 0x03, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x71,
	0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x83, 0x01, 0x0a,
	0x1e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x1a, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x12, 0x47, 0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x71, 0x75, 0x62, 0x69,
	0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x54, 0x69, 0x63, 0x6b, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x0c, 0x73,
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x78, 0x0a, 0x22, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x50, 0x65, 0x72,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x1e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x54, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x50, 0x65, 0x72,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x1a, 0x4d, 0x0a, 0x1f, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x73, 0x50, 0x65, 0x72, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x32, 0xf8, 0x02, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63,
	0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x71, 0x75,
	0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a,
	0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x67, 0x65, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5f, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x2e, 0x71, 0x75, 0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x71, 0x75,
	0x62, 0x69, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a,
	0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x67, 0x65, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x42,
	0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x75,
	0x62, 0x69, 0x63, 0x2f, 0x67, 0x6f, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qevents_proto_rawDescOnce sync.Once
	file_qevents_proto_rawDescData = file_qevents_proto_rawDesc
)

func file_qevents_proto_rawDescGZIP() []byte {
	file_qevents_proto_rawDescOnce.Do(func() {
		file_qevents_proto_rawDescData = protoimpl.X.CompressGZIP(file_qevents_proto_rawDescData)
	})
	return file_qevents_proto_rawDescData
}

var file_qevents_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_qevents_proto_goTypes = []interface{}{
	(*Event)(nil),                          // 0: qubic.events.Event
	(*TransactionEvents)(nil),              // 1: qubic.events.TransactionEvents
	(*TickEvents)(nil),                     // 2: qubic.events.TickEvents
	(*ProcessedTick)(nil),                  // 3: qubic.events.ProcessedTick
	(*LastProcessedTick)(nil),              // 4: qubic.events.LastProcessedTick
	(*NextAvailableTick)(nil),              // 5: qubic.events.NextAvailableTick
	(*SkippedTicksInterval)(nil),           // 6: qubic.events.SkippedTicksInterval
	(*SkippedTicksIntervalList)(nil),       // 7: qubic.events.SkippedTicksIntervalList
	(*ProcessedTickInterval)(nil),          // 8: qubic.events.ProcessedTickInterval
	(*ProcessedTickIntervalsPerEpoch)(nil), // 9: qubic.events.ProcessedTickIntervalsPerEpoch
	(*GetTickEventsRequest)(nil),           // 10: qubic.events.GetTickEventsRequest
	(*GetTickProcessTimeRequest)(nil),      // 11: qubic.events.GetTickProcessTimeRequest
	(*GetTickProcessTimeResponse)(nil),     // 12: qubic.events.GetTickProcessTimeResponse
	(*GetStatusResponse)(nil),              // 13: qubic.events.GetStatusResponse
	(*Event_Header)(nil),                   // 14: qubic.events.Event.Header
	nil,                                    // 15: qubic.events.GetStatusResponse.LastProcessedTicksPerEpochEntry
	(*emptypb.Empty)(nil),                  // 16: google.protobuf.Empty
}
var file_qevents_proto_depIdxs = []int32{
	14, // 0: qubic.events.Event.header:type_name -> qubic.events.Event.Header
	0,  // 1: qubic.events.TransactionEvents.events:type_name -> qubic.events.Event
	1,  // 2: qubic.events.TickEvents.tx_events:type_name -> qubic.events.TransactionEvents
	6,  // 3: qubic.events.SkippedTicksIntervalList.skipped_ticks:type_name -> qubic.events.SkippedTicksInterval
	8,  // 4: qubic.events.ProcessedTickIntervalsPerEpoch.intervals:type_name -> qubic.events.ProcessedTickInterval
	3,  // 5: qubic.events.GetStatusResponse.last_processed_tick:type_name -> qubic.events.ProcessedTick
	15, // 6: qubic.events.GetStatusResponse.last_processed_ticks_per_epoch:type_name -> qubic.events.GetStatusResponse.LastProcessedTicksPerEpochEntry
	6,  // 7: qubic.events.GetStatusResponse.skipped_ticks:type_name -> qubic.events.SkippedTicksInterval
	9,  // 8: qubic.events.GetStatusResponse.processed_tick_intervals_per_epoch:type_name -> qubic.events.ProcessedTickIntervalsPerEpoch
	10, // 9: qubic.events.EventsService.GetTickEvents:input_type -> qubic.events.GetTickEventsRequest
	16, // 10: qubic.events.EventsService.GetStatus:input_type -> google.protobuf.Empty
	11, // 11: qubic.events.EventsService.GetTickProcessTime:input_type -> qubic.events.GetTickProcessTimeRequest
	2,  // 12: qubic.events.EventsService.GetTickEvents:output_type -> qubic.events.TickEvents
	13, // 13: qubic.events.EventsService.GetStatus:output_type -> qubic.events.GetStatusResponse
	12, // 14: qubic.events.EventsService.GetTickProcessTime:output_type -> qubic.events.GetTickProcessTimeResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_qevents_proto_init() }
func file_qevents_proto_init() {
	if File_qevents_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qevents_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessedTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastProcessedTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextAvailableTick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkippedTicksInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkippedTicksIntervalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessedTickInterval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessedTickIntervalsPerEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTickEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTickProcessTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTickProcessTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qevents_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qevents_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qevents_proto_goTypes,
		DependencyIndexes: file_qevents_proto_depIdxs,
		MessageInfos:      file_qevents_proto_msgTypes,
	}.Build()
	File_qevents_proto = out.File
	file_qevents_proto_rawDesc = nil
	file_qevents_proto_goTypes = nil
	file_qevents_proto_depIdxs = nil
}
